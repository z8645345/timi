<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.timi.timizhuo.dao.mapper.TimiReplyMapper">
  <resultMap id="BaseResultMap" type="com.timi.timizhuo.dao.model.TimiReply">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="reply_id" jdbcType="VARCHAR" property="replyId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_image_url" jdbcType="VARCHAR" property="userImageUrl" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="tier_num" jdbcType="INTEGER" property="tierNum" />
    <result column="reply_time" jdbcType="TIMESTAMP" property="replyTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="forum_id" jdbcType="VARCHAR" property="forumId" />
    <result column="like_count" jdbcType="BIGINT" property="likeCount" />
    <result column="reply_num" jdbcType="INTEGER" property="replyNum" />
    <result column="reply_ype" jdbcType="INTEGER" property="replyType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.timi.timizhuo.dao.model.TimiReply">

    <result column="reply_cotent" jdbcType="LONGVARCHAR" property="replyCotent" />
  </resultMap>

  <sql id="Base_Column_List">
    t.reply_id, t.user_name,t.user_image_url, t.user_id, t.tier_num, t.reply_time, t.create_time, t.update_time,
    t.parent_id, t.forum_id, t.like_count,t.reply_num,t.reply_type
  </sql>


  <sql id="Blob_Column_List">
    <where>
      <if test="forumId != null and forumId ! = '' ">
        t.forum_id = #{forumId,jdbcType=VARCHAR}
      </if>
      <if test="parentId != null and parentId ! = '' ">
        t.parent_id = #{parentId,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>


  <insert id="insert" parameterType="com.timi.timizhuo.dao.model.TimiReply">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into timi_reply (reply_id, user_name, user_image_url, 
      user_id, tier_num, reply_time, 
      create_time, update_time, parent_id, 
      forum_id, like_count, reply_cotent,reply_num,reply_type
      )
    values (uuid(), #{userName,jdbcType=VARCHAR}, #{userImageUrl,jdbcType=VARCHAR},
      #{userId,jdbcType=VARCHAR}, #{tierNum,jdbcType=INTEGER}, #{replyTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{parentId,jdbcType=VARCHAR}, 
      #{forumId,jdbcType=VARCHAR}, #{likeCount,jdbcType=BIGINT}, #{replyCotent,jdbcType=LONGVARCHAR},
      #{replyNum,jdbcType=INTEGER}, #{replyType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.timi.timizhuo.dao.model.TimiReply">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into timi_reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        reply_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userImageUrl != null">
        user_image_url,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="tierNum != null">
        tier_num,
      </if>
      <if test="replyTime != null">
        reply_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="forumId != null">
        forum_id,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="replyCotent != null">
        reply_cotent,
      </if>
      <if test="replyNum != null">
        reply_num,
      </if>
      <if test="replyType != null">
        reply_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        #{replyId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userImageUrl != null">
        #{userImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="tierNum != null">
        #{tierNum,jdbcType=INTEGER},
      </if>
      <if test="replyTime != null">
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="forumId != null">
        #{forumId,jdbcType=VARCHAR},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=BIGINT},
      </if>
      <if test="replyCotent != null">
        #{replyCotent,jdbcType=LONGVARCHAR},
      </if>
      <if test="replyNum != null">
        #{replyNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateReplyNum" parameterType="com.timi.timizhuo.dao.model.TimiReply" >
    update timi_reply
    set reply_num = #{replyNum,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where reply_id = #{replyId,jdbcType=VARCHAR}
  </update>

  <!--根据条件查询-->
  <select id="findByCondition" parameterType="com.timi.timizhuo.dao.model.TimiReply" resultMap="BaseResultMap">
    select  <include refid="Base_Column_List" />
    from timi_reply t
    <include refid="Blob_Column_List" />
  </select>
  <!--根据id查询 -->
  <select id="findById" parameterType="com.timi.timizhuo.dao.model.TimiReply" resultMap="BaseResultMap">
    select  <include refid="Base_Column_List" />
    from timi_reply t where t.reply_id =#{replyId}
  </select>

  <!--根据条件查询且类型为主贴-->
  <select id="findByForumId" parameterType="String" resultMap="BaseResultMap">
    select  <include refid="Base_Column_List" />
    from timi_reply t
    where t.forum_id =#{forumId} and reply_type=1
    order by reply_time desc
  </select>

</mapper>